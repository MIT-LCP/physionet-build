# a github action on the dev branch that performs a build - test in a docker container
name: physionet-build-test

on:
  push:
    branches: 
      - dev
  pull_request:
    branches:
      - dev

jobs:
  container:
    runs-on: ubuntu-latest
    container: debian:10
    services:
      postgres:
        image: postgres:11.9
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    defaults:
      run:
        shell: bash
    steps:
      - name: checkout physionet-build repo
        uses: actions/checkout@v2
      - name: update packages
        run: |
          apt-get update --yes
      - name: install and configure needed software
        run: |
          apt-get install sudo python3-dev python3-pip build-essential postgresql zip wget python-virtualenv --yes
          ln -sT .env.example .env
      - name: install repo dependencies
        run: |
          virtualenv -p python3.7 env3
          source env3/bin/activate
          pip3 install -r requirements.txt
      - name: install libseccomp-dev for syscall filtering
        run: |
          apt-get install libseccomp-dev
      - name: install and setup wfdb
        run: |
          wget https://github.com/bemoody/wfdb/archive/10.6.2.tar.gz -O wfdb.tar.gz
          tar -xf wfdb.tar.gz
          (cd wfdb-* && ./configure --without-netfiles && make -C lib install && make -C data install)
      - name: run linker for newly installed software
        run: |
          ldconfig
      - name: install and setup lightwave
        run: |
          wget https://github.com/bemoody/lightwave/archive/bfe908a7f53434df61fd2444bf8c235e3e6226fc.tar.gz -O lightwave.tar.gz
          tar -xf lightwave.tar.gz
          (cd lightwave-* && make CGIDIR=/usr/local/bin sandboxed-server)
          wget https://github.com/mozilla/geckodriver/releases/download/v0.23.0/geckodriver-v0.23.0-linux64.tar.gz
      - name: install web driver - geckodriver 
        run: |
          mkdir geckodriver
          tar -xf geckodriver-v0.23.0-linux64.tar.gz -C geckodriver
          echo "$PWD/geckodriver" >> $GITHUB_PATH
      - name: setup and test physionet 
        run: |
          cd physionet-django
          DJANGO_DIR="$echo(pip show Django | grep 'Location:' | cut -d ' ' -f2)"
          echo "$DJANGO_DIR" >> $GITHUB_PATH
          python manage.py makemigrations --dry-run --no-input --check
          python manage.py resetdb
          python manage.py loaddemo
          python manage.py test --verbosity=3 --keepdb
      - name: check the amount of code being tested and print/report the result
        run: |
          coverage run --source='.' manage.py test --keepdb
          coverage report -m
