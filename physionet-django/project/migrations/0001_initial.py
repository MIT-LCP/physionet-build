# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2018-12-25 17:58
from __future__ import unicode_literals

import ckeditor.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import user.validators
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActiveProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource_type', models.PositiveSmallIntegerField(choices=[(0, 'Database'), (1, 'Software')])),
                ('title', models.CharField(max_length=200, validators=[user.validators.validate_alphaplus])),
                ('abstract', ckeditor.fields.RichTextField(blank=True, max_length=10000)),
                ('background', ckeditor.fields.RichTextField(blank=True)),
                ('methods', ckeditor.fields.RichTextField(blank=True)),
                ('content_description', ckeditor.fields.RichTextField(blank=True)),
                ('usage_notes', ckeditor.fields.RichTextField(blank=True)),
                ('installation', ckeditor.fields.RichTextField(blank=True)),
                ('acknowledgements', ckeditor.fields.RichTextField(blank=True)),
                ('conflicts_of_interest', ckeditor.fields.RichTextField(blank=True)),
                ('version', models.CharField(blank=True, default='', max_length=15)),
                ('release_notes', ckeditor.fields.RichTextField(blank=True)),
                ('access_policy', models.SmallIntegerField(choices=[(0, 'Open'), (1, 'Restricted'), (2, 'Credentialed')], default=0)),
                ('project_home_page', models.URLField(default='')),
                ('slug', models.SlugField(max_length=20, unique=True)),
                ('creation_datetime', models.DateTimeField(auto_now_add=True)),
                ('version_order', models.PositiveSmallIntegerField(default=0)),
                ('submission_datetime', models.DateTimeField(null=True)),
                ('author_comments', models.CharField(default='', max_length=1000)),
                ('editor_assignment_datetime', models.DateTimeField(null=True)),
                ('revision_request_datetime', models.DateTimeField(null=True)),
                ('resubmission_datetime', models.DateTimeField(null=True)),
                ('editor_accept_datetime', models.DateTimeField(null=True)),
                ('copyedit_completion_datetime', models.DateTimeField(null=True)),
                ('author_approval_datetime', models.DateTimeField(null=True)),
                ('modified_datetime', models.DateTimeField(auto_now=True)),
                ('submission_status', models.PositiveSmallIntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Affiliation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=202, validators=[user.validators.validate_alphaplusplus])),
            ],
        ),
        migrations.CreateModel(
            name='ArchivedProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource_type', models.PositiveSmallIntegerField(choices=[(0, 'Database'), (1, 'Software')])),
                ('title', models.CharField(max_length=200, validators=[user.validators.validate_alphaplus])),
                ('abstract', ckeditor.fields.RichTextField(blank=True, max_length=10000)),
                ('background', ckeditor.fields.RichTextField(blank=True)),
                ('methods', ckeditor.fields.RichTextField(blank=True)),
                ('content_description', ckeditor.fields.RichTextField(blank=True)),
                ('usage_notes', ckeditor.fields.RichTextField(blank=True)),
                ('installation', ckeditor.fields.RichTextField(blank=True)),
                ('acknowledgements', ckeditor.fields.RichTextField(blank=True)),
                ('conflicts_of_interest', ckeditor.fields.RichTextField(blank=True)),
                ('version', models.CharField(blank=True, default='', max_length=15)),
                ('release_notes', ckeditor.fields.RichTextField(blank=True)),
                ('access_policy', models.SmallIntegerField(choices=[(0, 'Open'), (1, 'Restricted'), (2, 'Credentialed')], default=0)),
                ('project_home_page', models.URLField(default='')),
                ('slug', models.SlugField(max_length=20, unique=True)),
                ('creation_datetime', models.DateTimeField(auto_now_add=True)),
                ('version_order', models.PositiveSmallIntegerField(default=0)),
                ('submission_datetime', models.DateTimeField(null=True)),
                ('author_comments', models.CharField(default='', max_length=1000)),
                ('editor_assignment_datetime', models.DateTimeField(null=True)),
                ('revision_request_datetime', models.DateTimeField(null=True)),
                ('resubmission_datetime', models.DateTimeField(null=True)),
                ('editor_accept_datetime', models.DateTimeField(null=True)),
                ('copyedit_completion_datetime', models.DateTimeField(null=True)),
                ('author_approval_datetime', models.DateTimeField(null=True)),
                ('modified_datetime', models.DateTimeField(auto_now=True)),
                ('archive_datetime', models.DateTimeField(auto_now_add=True)),
                ('archive_reason', models.PositiveSmallIntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_order', models.PositiveSmallIntegerField()),
                ('is_submitting', models.BooleanField(default=False)),
                ('is_corresponding', models.BooleanField(default=False)),
                ('approval_datetime', models.DateTimeField(null=True)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('corresponding_email', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='user.AssociatedEmail')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authors', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AuthorInvitation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_datetime', models.DateTimeField(auto_now_add=True)),
                ('response_datetime', models.DateTimeField(null=True)),
                ('response', models.NullBooleanField()),
                ('is_active', models.BooleanField(default=True)),
                ('email', models.EmailField(max_length=255)),
                ('inviter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authorinvitations', to='project.ActiveProject')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('affiliations', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='CopyeditLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('start_datetime', models.DateTimeField(auto_now_add=True)),
                ('is_reedit', models.BooleanField(default=False)),
                ('made_changes', models.NullBooleanField()),
                ('changelog_summary', models.CharField(blank=True, default='', max_length=2500)),
                ('complete_datetime', models.DateTimeField(null=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='CoreProject',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('creation_datetime', models.DateTimeField(auto_now_add=True)),
                ('doi', models.CharField(default='', max_length=50)),
                ('storage_allowance', models.BigIntegerField(default=104857600, validators=[django.core.validators.MaxValueValidator(109951162777600), django.core.validators.MinValueValidator(104857600)])),
            ],
        ),
        migrations.CreateModel(
            name='DUASignature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sign_datetime', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='EditLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('submission_datetime', models.DateTimeField(auto_now_add=True)),
                ('is_resubmission', models.BooleanField(default=False)),
                ('author_comments', models.CharField(default='', max_length=1000)),
                ('soundly_produced', models.NullBooleanField()),
                ('well_described', models.NullBooleanField()),
                ('open_format', models.NullBooleanField()),
                ('data_machine_readable', models.NullBooleanField()),
                ('reusable', models.NullBooleanField()),
                ('no_phi', models.NullBooleanField()),
                ('pn_suitable', models.NullBooleanField()),
                ('decision', models.SmallIntegerField(null=True)),
                ('decision_datetime', models.DateTimeField(null=True)),
                ('editor_comments', models.CharField(max_length=2500)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=120)),
                ('text_content', models.TextField(default='')),
                ('html_content', ckeditor.fields.RichTextField(default='')),
                ('home_page', models.URLField()),
                ('access_policy', models.PositiveSmallIntegerField(choices=[(0, 'Open'), (1, 'Restricted'), (2, 'Credentialed')], default=0)),
                ('resource_type', models.PositiveSmallIntegerField(choices=[(0, 'Database'), (1, 'Software')])),
                ('dua_name', models.CharField(max_length=100)),
                ('dua_html_content', ckeditor.fields.RichTextField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='ProgrammingLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('citation', models.CharField(max_length=250)),
                ('url', models.URLField(blank=True, default='')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PublishedAffiliation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=202, validators=[user.validators.validate_alphaplus])),
            ],
        ),
        migrations.CreateModel(
            name='PublishedAuthor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_order', models.PositiveSmallIntegerField()),
                ('is_submitting', models.BooleanField(default=False)),
                ('is_corresponding', models.BooleanField(default=False)),
                ('approval_datetime', models.DateTimeField(null=True)),
                ('first_names', models.CharField(default='', max_length=100)),
                ('last_name', models.CharField(default='', max_length=50)),
                ('corresponding_email', models.EmailField(max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PublishedProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource_type', models.PositiveSmallIntegerField(choices=[(0, 'Database'), (1, 'Software')])),
                ('title', models.CharField(max_length=200, validators=[user.validators.validate_alphaplus])),
                ('abstract', ckeditor.fields.RichTextField(blank=True, max_length=10000)),
                ('background', ckeditor.fields.RichTextField(blank=True)),
                ('methods', ckeditor.fields.RichTextField(blank=True)),
                ('content_description', ckeditor.fields.RichTextField(blank=True)),
                ('usage_notes', ckeditor.fields.RichTextField(blank=True)),
                ('installation', ckeditor.fields.RichTextField(blank=True)),
                ('acknowledgements', ckeditor.fields.RichTextField(blank=True)),
                ('conflicts_of_interest', ckeditor.fields.RichTextField(blank=True)),
                ('version', models.CharField(blank=True, default='', max_length=15)),
                ('release_notes', ckeditor.fields.RichTextField(blank=True)),
                ('access_policy', models.SmallIntegerField(choices=[(0, 'Open'), (1, 'Restricted'), (2, 'Credentialed')], default=0)),
                ('project_home_page', models.URLField(default='')),
                ('slug', models.SlugField(max_length=20, unique=True)),
                ('creation_datetime', models.DateTimeField(auto_now_add=True)),
                ('version_order', models.PositiveSmallIntegerField(default=0)),
                ('submission_datetime', models.DateTimeField(null=True)),
                ('author_comments', models.CharField(default='', max_length=1000)),
                ('editor_assignment_datetime', models.DateTimeField(null=True)),
                ('revision_request_datetime', models.DateTimeField(null=True)),
                ('resubmission_datetime', models.DateTimeField(null=True)),
                ('editor_accept_datetime', models.DateTimeField(null=True)),
                ('copyedit_completion_datetime', models.DateTimeField(null=True)),
                ('author_approval_datetime', models.DateTimeField(null=True)),
                ('main_storage_size', models.PositiveIntegerField(default=0)),
                ('special_storage_size', models.PositiveIntegerField(default=0)),
                ('total_storage_size', models.PositiveIntegerField(default=0)),
                ('publish_datetime', models.DateTimeField(auto_now_add=True)),
                ('is_newest_version', models.BooleanField(default=True)),
                ('doi', models.CharField(max_length=50, unique=True)),
                ('approved_users', models.ManyToManyField(db_index=True, to=settings.AUTH_USER_MODEL)),
                ('core_project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='publishedprojects', to='project.CoreProject')),
                ('editor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='editing_publishedprojects', to=settings.AUTH_USER_MODEL)),
                ('license', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='project.License')),
                ('newest_version', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='older_versions', to='project.PublishedProject')),
                ('programming_languages', models.ManyToManyField(related_name='publishedprojects', to='project.ProgrammingLanguage')),
            ],
        ),
        migrations.CreateModel(
            name='PublishedPublication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('citation', models.CharField(max_length=250)),
                ('url', models.URLField(blank=True, default='')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='publications', to='project.PublishedProject')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PublishedReference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=250)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='references', to='project.PublishedProject')),
            ],
        ),
        migrations.CreateModel(
            name='PublishedTopic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=50, validators=[user.validators.validate_alphaplus])),
                ('project_count', models.PositiveIntegerField(default=0)),
                ('projects', models.ManyToManyField(related_name='topics', to='project.PublishedProject')),
            ],
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('description', models.CharField(max_length=250)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='StorageRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_datetime', models.DateTimeField(auto_now_add=True)),
                ('response_datetime', models.DateTimeField(null=True)),
                ('response', models.NullBooleanField()),
                ('is_active', models.BooleanField(default=True)),
                ('request_allowance', models.SmallIntegerField(validators=[django.core.validators.MaxValueValidator(10240), django.core.validators.MinValueValidator(1)])),
                ('response_message', models.CharField(blank=True, default='', max_length=50)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='storagerequests', to='project.ActiveProject')),
                ('responder', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('description', models.CharField(max_length=50, validators=[user.validators.validate_alphaplus])),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.AddField(
            model_name='publishedauthor',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authors', to='project.PublishedProject'),
        ),
        migrations.AddField(
            model_name='publishedauthor',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='publishedauthors', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='publishedaffiliation',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='affiliations', to='project.PublishedAuthor'),
        ),
        migrations.AddField(
            model_name='duasignature',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.PublishedProject'),
        ),
        migrations.AddField(
            model_name='duasignature',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contact',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='project.PublishedProject'),
        ),
        migrations.AddField(
            model_name='archivedproject',
            name='core_project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='archivedprojects', to='project.CoreProject'),
        ),
        migrations.AddField(
            model_name='archivedproject',
            name='editor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='editing_archivedprojects', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='archivedproject',
            name='license',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='project.License'),
        ),
        migrations.AddField(
            model_name='archivedproject',
            name='programming_languages',
            field=models.ManyToManyField(related_name='archivedprojects', to='project.ProgrammingLanguage'),
        ),
        migrations.AddField(
            model_name='affiliation',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='affiliations', to='project.Author'),
        ),
        migrations.AddField(
            model_name='activeproject',
            name='core_project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activeprojects', to='project.CoreProject'),
        ),
        migrations.AddField(
            model_name='activeproject',
            name='editor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='editing_activeprojects', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='activeproject',
            name='license',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='project.License'),
        ),
        migrations.AddField(
            model_name='activeproject',
            name='programming_languages',
            field=models.ManyToManyField(related_name='activeprojects', to='project.ProgrammingLanguage'),
        ),
        migrations.AlterUniqueTogether(
            name='topic',
            unique_together=set([('description', 'content_type', 'object_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='reference',
            unique_together=set([('description', 'content_type', 'object_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='publishedreference',
            unique_together=set([('description', 'project')]),
        ),
        migrations.AlterUniqueTogether(
            name='publishedproject',
            unique_together=set([('core_project', 'version')]),
        ),
        migrations.AlterUniqueTogether(
            name='publishedauthor',
            unique_together=set([('user', 'project')]),
        ),
        migrations.AlterUniqueTogether(
            name='publishedaffiliation',
            unique_together=set([('name', 'author')]),
        ),
        migrations.AlterUniqueTogether(
            name='author',
            unique_together=set([('user', 'content_type', 'object_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='affiliation',
            unique_together=set([('name', 'author')]),
        ),
    ]
