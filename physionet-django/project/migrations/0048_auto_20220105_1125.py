# Generated by Django 2.2.24 on 2022-01-05 16:25
import os

from django.db import migrations
from django.conf import settings
from django.core.management import call_command

from project.modelcomponents.access import AccessPolicy


def migrate_forward(apps, schema_editor):
    ActiveProject = apps.get_model('project', 'ActiveProject')
    ArchivedProject = apps.get_model('project', 'ArchivedProject')
    PublishedProject = apps.get_model('project', 'PublishedProject')
    License = apps.get_model('project', 'License')

    call_command('loaddata', os.path.join(settings.BASE_DIR, 'project', 'fixtures', 'contributor-review-license.json'))
    license = License.objects.last()

    ActiveProject.objects.filter(is_self_managed_access=True).update(
        access_policy=AccessPolicy.CONTRIBUTOR_REVIEW, license=license
    )
    ArchivedProject.objects.filter(is_self_managed_access=True).update(
        access_policy=AccessPolicy.CONTRIBUTOR_REVIEW, license=license
    )
    PublishedProject.objects.filter(is_self_managed_access=True).update(
        access_policy=AccessPolicy.CONTRIBUTOR_REVIEW, license=license
    )


def migrate_backward(apps, schema_edtior):
    ActiveProject = apps.get_model('project', 'ActiveProject')
    ArchivedProject = apps.get_model('project', 'ArchivedProject')
    PublishedProject = apps.get_model('project', 'PublishedProject')
    License = apps.get_model('project', 'License')

    license = License.objects.get(slug='physionet-contributor-review-health-data-license-150')

    ActiveProject.objects.filter(access_policy=AccessPolicy.CONTRIBUTOR_REVIEW).update(
        is_self_managed_access=True,
        self_managed_dua=license.dua_html_content,
        self_managed_request_template=license.access_request_template,
    )
    ArchivedProject.objects.filter(access_policy=AccessPolicy.CONTRIBUTOR_REVIEW).update(
        is_self_managed_access=True,
        self_managed_dua=license.dua_html_content,
        self_managed_request_template=license.access_request_template,
    )
    PublishedProject.objects.filter(access_policy=AccessPolicy.CONTRIBUTOR_REVIEW).update(
        is_self_managed_access=True,
        self_managed_dua=license.dua_html_content,
        self_managed_request_template=license.access_request_template,
    )

    license.delete()


class Migration(migrations.Migration):
    MIGRATE_AFTER_INSTALL = True

    dependencies = [
        ('project', '0047_auto_20211129_0427'),
    ]

    operations = [
        migrations.RunPython(migrate_forward, migrate_backward),
    ]
