# Generated by Django 2.2.24 on 2021-11-29 09:27
import os

from django.conf import settings
from django.core.management import call_command
from django.db import migrations, models

from project.modelcomponents.access import AccessPolicy
from project.modelcomponents.fields import SafeHTMLField


def migrate_forward(apps, schema_editor):
    ActiveProject = apps.get_model('project', 'ActiveProject')
    ArchivedProject = apps.get_model('project', 'ArchivedProject')
    PublishedProject = apps.get_model('project', 'PublishedProject')
    License = apps.get_model('project', 'License')

    call_command('loaddata', os.path.join(settings.BASE_DIR, 'project', 'fixtures', 'contributor-review-license.json'))
    license = License.objects.get(slug='physionet-contributor-review-health-data-license-150')

    ActiveProject.objects.filter(is_self_managed_access=True).update(
        access_policy=AccessPolicy.CONTRIBUTOR_REVIEW, license=license
    )
    ArchivedProject.objects.filter(is_self_managed_access=True).update(
        access_policy=AccessPolicy.CONTRIBUTOR_REVIEW, license=license
    )
    PublishedProject.objects.filter(is_self_managed_access=True).update(
        access_policy=AccessPolicy.CONTRIBUTOR_REVIEW, license=license
    )


def migrate_backward(apps, schema_edtior):
    ActiveProject = apps.get_model('project', 'ActiveProject')
    ArchivedProject = apps.get_model('project', 'ArchivedProject')
    PublishedProject = apps.get_model('project', 'PublishedProject')
    License = apps.get_model('project', 'License')

    old_license = License.objects.get(slug='physionet-credentialed-health-data-license-150')
    new_licenses = License.objects.filter(slug='physionet-contributor-review-health-data-license-150')
    new_license = new_licenses.first()

    ActiveProject.objects.filter(access_policy=AccessPolicy.CONTRIBUTOR_REVIEW).update(
        is_self_managed_access=True,
        access_policy=AccessPolicy.CREDENTIALED,
        self_managed_dua=new_license.dua_html_content,
        self_managed_request_template=new_license.access_request_template,
        license=old_license,
    )
    ArchivedProject.objects.filter(access_policy=AccessPolicy.CONTRIBUTOR_REVIEW).update(
        is_self_managed_access=True,
        access_policy=AccessPolicy.CREDENTIALED,
        self_managed_dua=new_license.dua_html_content,
        self_managed_request_template=new_license.access_request_template,
        license=old_license,
    )
    PublishedProject.objects.filter(access_policy=AccessPolicy.CONTRIBUTOR_REVIEW).update(
        is_self_managed_access=True,
        access_policy=AccessPolicy.CREDENTIALED,
        self_managed_dua=new_license.dua_html_content,
        self_managed_request_template=new_license.access_request_template,
        license=old_license,
    )

    new_licenses.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('project', '0050_ethics_statement_2'),
    ]

    operations = [
        migrations.AlterField(
            model_name='activeproject',
            name='access_policy',
            field=models.SmallIntegerField(
                choices=[(0, 'Open'), (1, 'Restricted'), (2, 'Credentialed'), (3, 'Contributor Review')],
                default=AccessPolicy(0),
            ),
        ),
        migrations.AlterField(
            model_name='archivedproject',
            name='access_policy',
            field=models.SmallIntegerField(
                choices=[(0, 'Open'), (1, 'Restricted'), (2, 'Credentialed'), (3, 'Contributor Review')],
                default=AccessPolicy(0),
            ),
        ),
        migrations.AlterField(
            model_name='license',
            name='access_policy',
            field=models.PositiveSmallIntegerField(
                choices=[(0, 'Open'), (1, 'Restricted'), (2, 'Credentialed'), (3, 'Contributor Review')],
                default=AccessPolicy(0),
            ),
        ),
        migrations.AlterField(
            model_name='publishedproject',
            name='access_policy',
            field=models.SmallIntegerField(
                choices=[(0, 'Open'), (1, 'Restricted'), (2, 'Credentialed'), (3, 'Contributor Review')],
                default=AccessPolicy(0),
            ),
        ),
        migrations.AddField(
            model_name='license',
            name='access_request_template',
            field=SafeHTMLField(blank=True, default=''),
        ),
        migrations.AlterField(
            model_name='activeproject',
            name='is_self_managed_access',
            field=models.BooleanField(default=False, null=True),
        ),
        migrations.AlterField(
            model_name='archivedproject',
            name='is_self_managed_access',
            field=models.BooleanField(default=False, null=True),
        ),
        migrations.AlterField(
            model_name='publishedproject',
            name='is_self_managed_access',
            field=models.BooleanField(default=False, null=True),
        ),
        migrations.AlterField(
            model_name='activeproject',
            name='self_managed_dua',
            field=SafeHTMLField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='archivedproject',
            name='self_managed_dua',
            field=SafeHTMLField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='publishedproject',
            name='self_managed_dua',
            field=SafeHTMLField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='activeproject',
            name='self_managed_request_template',
            field=SafeHTMLField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='archivedproject',
            name='self_managed_request_template',
            field=SafeHTMLField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='publishedproject',
            name='self_managed_request_template',
            field=SafeHTMLField(blank=True, null=True),
        ),
        migrations.RunPython(migrate_forward, migrate_backward),
    ]
